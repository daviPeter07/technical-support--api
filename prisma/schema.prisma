// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Usuário com hierarquia
model User {
  id          Int       @id @default(autoincrement())
  name        String
  email       String    @unique
  password    String
  role        UserRole  @default(USER)
  tickets     Ticket[]  @relation("CreatedTickets")
  assignedTickets Ticket[] @relation("AssignedTickets")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// Chamados
model Ticket {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  status      Status    @relation(fields: [statusId], references: [id])
  statusId    Int
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  Int
  createdBy   User      @relation("CreatedTickets", fields: [userId], references: [id])
  userId      Int
  assignedTo  User?     @relation("AssignedTickets", fields: [assignedToId], references: [id])
  assignedToId Int?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

// Categoria de chamado
model Category {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  tickets Ticket[]
}

// Status do chamado
model Status {
  id      Int      @id @default(autoincrement())
  name    String   @unique
  tickets Ticket[]
}

// Hierarquia de usuários
enum UserRole {
  USER       // Pode apenas criar e ver seus chamados
  TECHNICIAN // Pode editar, deletar e listar todos chamados
  ADMIN      // Permissões totais
}